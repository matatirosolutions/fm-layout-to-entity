<?php
/**
 * Created by PhpStorm.
 * User: stevewinter
 * Date: 17/08/2018
 * Time: 15:43
 */

namespace Console;


use DateTime;

class Components
{
    public static function header(string $entity, string $layout, bool $repo): string
    {
        $now = new DateTime();
        $date = $now->format('d/m/Y');
        $time = $now->format('H:i');
        $repoString = $repo ? sprintf('@ORM\Entity(repositoryClass="App\Repository\%sRepository")', $entity) : '';

        return <<<EOPHP
<?php
/**
 * Created by FM Layout to Entity.
 * Date: {$date}
 * Time: {$time}
 */

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * {$entity}
 *
 * @ORM\Table(name="{$layout}")
 * {$repoString}
 */
class {$entity}
{
    /**
     * @var int
     *
     * @ORM\Column(name="rec_id", type="integer")
     */
    private \$id;

EOPHP;

    }

    public static function Text($field): string
    {
        $col = self::getColName($field);
        $param = self::getParamName($field);
        return <<<EOPHP

    /**
     * @var string
     *
     * @ORM\Column(name="{$col}", type="string", length=255)
     */
    private \${$param};
    
EOPHP;
    }

    public static function Number($field): string
    {
        $col = self::getColName($field);
        $param = self::getParamName($field);

        return <<<EOPHP

    /**
     * @var integer
     *
     * @ORM\Column(name="{$col}", type="integer")
     */
    private \${$param};
    
EOPHP;
    }

    public static function Date($field): string
    {
        $col = self::getColName($field);
        $param = self::getParamName($field);

        return <<<EOPHP

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="{$col}", type="fmdate")
     */
    private \${$param};
    
EOPHP;
    }

    public static function Time($field): string
    {
        $col = self::getColName($field);
        $param = self::getParamName($field);

        return <<<EOPHP

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="{$col}", type="fmtime")
     */
    private \${$param};
    
EOPHP;
    }

    public static function Timestamp($field): string
    {
        $col = self::getColName($field);
        $param = self::getParamName($field);

        return <<<EOPHP

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="{$col}", type="fmdatetime")
     */
    private \${$param};
    
EOPHP;
    }

    public static function Container($field): string
    {
        $col = self::getColName($field);
        $param = self::getParamName($field);

        return <<<EOPHP

    /**
     * @var string
     *
     * @ORM\Column(name="{$col}", type="string", length=255)
     */
    private \${$param};
    
EOPHP;
    }

    public static function footer(): string
    {
        return <<<EOPHP

}
EOPHP;

    }

    private static function getColName($field): string
    {
        return strpos($field, '::') !== false ? "'{$field}'" : $field;
    }

    private static function getParamName($field): string
    {
        return lcfirst(
            str_replace(['::', '.', '_', ' '], '', $field)
        );
    }

    public static function repo($entity): string
    {
        $now = new DateTime();
        $date = $now->format('d/m/Y');
        $time = $now->format('H:i');

        return <<<EOPHP
<?php
/**
 * Created by FM Layout to Entity.
 * Date: {$date}
 * Time: {$time}
 */
 
namespace App\Repository;

use App\Entity\\{$entity};
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\EntityRepository;

/**
 * {$entity}Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class {$entity}Repository extends EntityRepository
{
}
EOPHP;
    }

}